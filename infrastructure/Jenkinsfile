pipeline {
    agent any

    environment {
        // Retrieve Docker credentials
        DOCKER_CREDENTIALS = credentials("docker_password")
        GITHUB_TOKEN = credentials("github_token")
        DOCKER_USERNAME = "${DOCKER_CREDENTIALS_USR}" // Assuming the credential ID is "docker_password"
        DOCKER_PASSWORD = "${DOCKER_CREDENTIALS_PSW}" // Assuming the credential ID is "docker_password"
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Fetch tag')
        {
            steps {
                script {
                    "IMAGE_TAG=${env.IMAGE_TAG} docker compose up -d hello mongo"
                }  
            }

        }

        stage('Tag image') {
            steps {
                script {
                    GIT_TAG = sh([script: 'git fetch --tag && git tag', returnStdout: true]).trim()
                    env.MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                    env.MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                    env.PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()
                    env.IMAGE_TAG = "${env.MAJOR_VERSION}.\$((${env.MINOR_VERSION} + 1)).${env.PATCH_VERSION}"
                }

                sh "docker build -t ${DOCKER_USERNAME}/hello-img:${env.IMAGE_TAG} -f /Dockerfile ."

                sh "docker login docker.io -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                sh "docker push ${DOCKER_USERNAME}/hello-img:${env.IMAGE_TAG}"

                sh "git tag ${env.IMAGE_TAG}"
                sh "git push https://${GITHUB_TOKEN_PSW}@github.com/Clinica-Production-Studios/service.git ${env.IMAGE_TAG}"
            }
        }
    }
}
